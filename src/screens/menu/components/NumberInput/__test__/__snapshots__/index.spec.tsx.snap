// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NumberInput component renders correctly when decreasing value 1`] = `
<View
  style={
    {
      "alignItems": "center",
      "flexDirection": "row",
    }
  }
>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "opacity": 1,
      }
    }
    testID="NumberInput.TouchableOpacity.minus"
  >
    <Text
      style={
        {
          "fontSize": 30,
        }
      }
    >
      [-]
    </Text>
  </View>
  <View
    style={
      {
        "alignItems": "center",
        "height": 50,
        "justifyContent": "center",
        "minWidth": 110,
        "paddingTop": 8,
      }
    }
  >
    <Text
      style={
        {
          "fontSize": 32,
          "textAlign": "center",
        }
      }
    >
      2x2
    </Text>
  </View>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "opacity": 1,
      }
    }
    testID="NumberInput.TouchableOpacity.plus"
  >
    <Text
      style={
        {
          "fontSize": 30,
        }
      }
    >
      [+]
    </Text>
  </View>
</View>
`;

exports[`NumberInput component renders correctly when increasing value 1`] = `
<View
  style={
    {
      "alignItems": "center",
      "flexDirection": "row",
    }
  }
>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "opacity": 1,
      }
    }
    testID="NumberInput.TouchableOpacity.minus"
  >
    <Text
      style={
        {
          "fontSize": 30,
        }
      }
    >
      [-]
    </Text>
  </View>
  <View
    style={
      {
        "alignItems": "center",
        "height": 50,
        "justifyContent": "center",
        "minWidth": 110,
        "paddingTop": 8,
      }
    }
  >
    <Text
      style={
        {
          "fontSize": 32,
          "textAlign": "center",
        }
      }
    >
      4x4
    </Text>
  </View>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "opacity": 1,
      }
    }
    testID="NumberInput.TouchableOpacity.plus"
  >
    <Text
      style={
        {
          "fontSize": 30,
        }
      }
    >
      [+]
    </Text>
  </View>
</View>
`;

exports[`NumberInput component renders correctly when value reaches maximum 1`] = `
<View
  style={
    {
      "alignItems": "center",
      "flexDirection": "row",
    }
  }
>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "opacity": 1,
      }
    }
    testID="NumberInput.TouchableOpacity.minus"
  >
    <Text
      style={
        {
          "fontSize": 30,
        }
      }
    >
      [-]
    </Text>
  </View>
  <View
    style={
      {
        "alignItems": "center",
        "height": 50,
        "justifyContent": "center",
        "minWidth": 110,
        "paddingTop": 8,
      }
    }
  >
    <Text
      style={
        {
          "fontSize": 32,
          "textAlign": "center",
        }
      }
    >
      5x5
    </Text>
  </View>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "opacity": 1,
      }
    }
    testID="NumberInput.TouchableOpacity.plus"
  >
    <Text
      style={
        {
          "fontSize": 30,
        }
      }
    >
      [+]
    </Text>
  </View>
</View>
`;

exports[`NumberInput component renders correctly when value reaches minimum 1`] = `
<View
  style={
    {
      "alignItems": "center",
      "flexDirection": "row",
    }
  }
>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "opacity": 1,
      }
    }
    testID="NumberInput.TouchableOpacity.minus"
  >
    <Text
      style={
        {
          "fontSize": 30,
        }
      }
    >
      [-]
    </Text>
  </View>
  <View
    style={
      {
        "alignItems": "center",
        "height": 50,
        "justifyContent": "center",
        "minWidth": 110,
        "paddingTop": 8,
      }
    }
  >
    <Text
      style={
        {
          "fontSize": 32,
          "textAlign": "center",
        }
      }
    >
      0x0
    </Text>
  </View>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "opacity": 1,
      }
    }
    testID="NumberInput.TouchableOpacity.plus"
  >
    <Text
      style={
        {
          "fontSize": 30,
        }
      }
    >
      [+]
    </Text>
  </View>
</View>
`;

exports[`NumberInput component renders correctly with initial value 1`] = `
<View
  style={
    {
      "alignItems": "center",
      "flexDirection": "row",
    }
  }
>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "opacity": 1,
      }
    }
    testID="NumberInput.TouchableOpacity.minus"
  >
    <Text
      style={
        {
          "fontSize": 30,
        }
      }
    >
      [-]
    </Text>
  </View>
  <View
    style={
      {
        "alignItems": "center",
        "height": 50,
        "justifyContent": "center",
        "minWidth": 110,
        "paddingTop": 8,
      }
    }
  >
    <Text
      style={
        {
          "fontSize": 32,
          "textAlign": "center",
        }
      }
    >
      3x3
    </Text>
  </View>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "opacity": 1,
      }
    }
    testID="NumberInput.TouchableOpacity.plus"
  >
    <Text
      style={
        {
          "fontSize": 30,
        }
      }
    >
      [+]
    </Text>
  </View>
</View>
`;
